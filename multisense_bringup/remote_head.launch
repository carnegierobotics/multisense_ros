<?xml version="1.0"?>
<launch>

  <arg name="ip_address" default="10.66.171.21" doc="IP address of the multisense being connected to" />
  <arg name="mtu"        default="7200"         doc="The maximum packet size that image data will be broken into when sent from the multisense.
  Setting to values above network adapter MTU will block image data from camera" />

  <arg name="launch_vpb"   default="true" doc="Set to false to prevent launching a multisense driver instance for VPB" />
  <arg name="launch_head0" default="true" doc="Set to false to prevent launching a multisense driver instance for remote head channel 0" />
  <arg name="launch_head1" default="true" doc="Set to false to prevent launching a multisense driver instance for remote head channel 1" />
  <arg name="launch_head2" default="true" doc="Set to false to prevent launching a multisense driver instance for remote head channel 2" />
  <arg name="launch_head3" default="true" doc="Set to false to prevent launching a multisense driver instance for remote head channel 3" />

  <arg name="vpb_namespace"    default="multisense_vpb" />
  <arg name="head0_namespace"  default="remote_head_0" />
  <arg name="head1_namespace"  default="remote_head_1" />
  <arg name="head2_namespace"  default="remote_head_2" />
  <arg name="head3_namespace"  default="remote_head_3" />

  <arg name="vpb_sensor"       default="remote_head_vpb"    doc="VPB Sensor type, should always be remote_head_vpb" />
  <arg name="head0_sensor"     default="remote_head_stereo" doc="Remote head 0 sensor type. Options: remote_head_stereo, remote_head_monocam" />
  <arg name="head1_sensor"     default="remote_head_stereo" doc="Remote head 1 sensor type. Options: remote_head_stereo, remote_head_monocam" />
  <arg name="head2_sensor"     default="remote_head_stereo" doc="Remote head 2 sensor type. Options: remote_head_stereo, remote_head_monocam" />
  <arg name="head3_sensor"     default="remote_head_stereo" doc="Remote head 3 sensor type. Options: remote_head_stereo, remote_head_monocam" />

  <arg name="vpb_nodes_prefix"   default="$(arg vpb_namespace)" />
  <arg name="head0_nodes_prefix" default="$(arg head0_namespace)" />
  <arg name="head1_nodes_prefix" default="$(arg head1_namespace)" />
  <arg name="head2_nodes_prefix" default="$(arg head2_namespace)" />
  <arg name="head3_nodes_prefix" default="$(arg head3_namespace)" />

  <arg name="vpb_tf_prefix"   default="$(arg vpb_namespace)" />
  <arg name="head0_tf_prefix" default="$(arg head0_namespace)" />
  <arg name="head1_tf_prefix" default="$(arg head1_namespace)" />
  <arg name="head2_tf_prefix" default="$(arg head2_namespace)" />
  <arg name="head3_tf_prefix" default="$(arg head3_namespace)" />

  <arg name="launch_robot_state_publisher" default="true" />
  <arg name="camera_timeout_s" default="-1" doc="Camera driver will shut down if it does not hear from the camera after this many seconds. (Disabled when &lt;=0. Values &lt;3 may result in false positives)" />
  <arg name="respawn" default="false" doc="Respawn the multisense node if the camera disconnects" />

  <!-- Remote Head VPB Launch-->
  <group if = "$(arg launch_vpb)">

    <!-- ROS Driver -->
    <node pkg="multisense_ros" ns="$(arg vpb_namespace)" type="ros_driver" name="$(arg vpb_nodes_prefix)_driver" output="screen" required="true" respawn="$(arg respawn)" >
      <param name="sensor_ip" value="$(arg ip_address)" />
      <param name="sensor_mtu" value="$(arg mtu)" />
      <param name="tf_prefix"  value="$(arg vpb_tf_prefix)" />
      <param name="head_id"  value="-1" />
      <param name="camera_timeout_s"  value="$(arg camera_timeout_s)" />
    </node>

    <!-- Robot state publisher -->
    <group if = "$(arg launch_robot_state_publisher)">
      <param name="robot_description"
            command="$(find xacro)/xacro '$(find multisense_description)/urdf/multisense$(arg vpb_sensor)/standalone.urdf.xacro' name:=$(arg vpb_namespace)"/>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(arg vpb_nodes_prefix)_state_publisher" required="true" respawn="$(arg respawn)" >
        <param name="publish_frequency" type="double" value="50.0" />
        <remap from="joint_states" to="/$(arg vpb_namespace)/joint_states" />
      </node>
    </group>

  </group>


  <!-- Remote Head 0 Launch -->
  <group if = "$(arg launch_head0)">

    <!-- ROS Driver -->
    <node pkg="multisense_ros" ns="$(arg head0_namespace)" type="ros_driver" name="$(arg head0_nodes_prefix)_driver" output="screen" required="true" respawn="$(arg respawn)" >
      <param name="sensor_ip" value="$(arg ip_address)" />
      <param name="sensor_mtu" value="$(arg mtu)" />
      <param name="tf_prefix"  value="$(arg head0_tf_prefix)" />
      <param name="head_id"  value="0" />
      <param name="camera_timeout_s"  value="$(arg camera_timeout_s)" />
    </node>

    <!-- Robot state publisher -->
    <group if = "$(arg launch_robot_state_publisher)">
      <param name="robot_description"
            command="$(find xacro)/xacro '$(find multisense_description)/urdf/multisense$(arg head0_sensor)/standalone.urdf.xacro' name:=$(arg head0_namespace)"/>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(arg head0_nodes_prefix)_state_publisher" required="true" respawn="$(arg respawn)" >
        <param name="publish_frequency" type="double" value="50.0" />
        <remap from="joint_states" to="/$(arg head0_namespace)/joint_states" />
      </node>
    </group>

  </group>


  <!-- Remote Head 1 Launch -->
  <group if = "$(arg launch_head1)">

    <!-- ROS Driver -->
    <node pkg="multisense_ros" ns="$(arg head1_namespace)" type="ros_driver" name="$(arg head1_nodes_prefix)_driver" output="screen" required="true" respawn="$(arg respawn)" >
      <param name="sensor_ip" value="$(arg ip_address)" />
      <param name="sensor_mtu" value="$(arg mtu)" />
      <param name="tf_prefix"  value="$(arg head1_tf_prefix)" />
      <param name="head_id"  value="1" />
      <param name="camera_timeout_s"  value="$(arg camera_timeout_s)" />
    </node>

    <!-- Robot state publisher -->
    <group if = "$(arg launch_robot_state_publisher)">
      <param name="robot_description"
            command="$(find xacro)/xacro '$(find multisense_description)/urdf/multisense$(arg head1_sensor)/standalone.urdf.xacro' name:=$(arg head1_namespace)"/>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(arg head1_nodes_prefix)_state_publisher" required="true" respawn="$(arg respawn)" >
        <param name="publish_frequency" type="double" value="50.0" />
        <remap from="joint_states" to="/$(arg head1_namespace)/joint_states" />
      </node>
    </group>

  </group>


  <!-- Remote Head 2 Launch -->
  <group if = "$(arg launch_head2)">

    <!-- ROS Driver -->
    <node pkg="multisense_ros" ns="$(arg head2_namespace)" type="ros_driver" name="$(arg head2_nodes_prefix)_driver" output="screen" required="true" respawn="$(arg respawn)" >
      <param name="sensor_ip" value="$(arg ip_address)" />
      <param name="sensor_mtu" value="$(arg mtu)" />
      <param name="tf_prefix"  value="$(arg head2_tf_prefix)" />
      <param name="head_id"  value="2" />
      <param name="camera_timeout_s"  value="$(arg camera_timeout_s)" />
    </node>

    <!-- Robot state publisher -->
    <group if = "$(arg launch_robot_state_publisher)">
      <param name="robot_description"
            command="$(find xacro)/xacro '$(find multisense_description)/urdf/multisense$(arg head2_sensor)/standalone.urdf.xacro' name:=$(arg head2_namespace)"/>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(arg head2_nodes_prefix)_state_publisher" required="true" respawn="$(arg respawn)" >
        <param name="publish_frequency" type="double" value="50.0" />
        <remap from="joint_states" to="/$(arg head2_namespace)/joint_states" />
      </node>
    </group>

  </group>


  <!-- Remote Head 3 Launch -->
  <group if = "$(arg launch_head3)">

    <!-- ROS Driver -->
    <node pkg="multisense_ros" ns="$(arg head3_namespace)" type="ros_driver" name="$(arg head3_nodes_prefix)_driver" output="screen" required="true" respawn="$(arg respawn)" >
      <param name="sensor_ip" value="$(arg ip_address)" />
      <param name="sensor_mtu" value="$(arg mtu)" />
      <param name="tf_prefix"  value="$(arg head3_tf_prefix)" />
      <param name="head_id"  value="3" />
      <param name="camera_timeout_s"  value="$(arg camera_timeout_s)" />
    </node>

    <!-- Robot state publisher -->
    <group if = "$(arg launch_robot_state_publisher)">
      <param name="robot_description"
            command="$(find xacro)/xacro '$(find multisense_description)/urdf/multisense$(arg head3_sensor)/standalone.urdf.xacro' name:=$(arg head3_namespace)"/>
      <node pkg="robot_state_publisher" type="robot_state_publisher" name="$(arg head3_nodes_prefix)_state_publisher" required="true" respawn="$(arg respawn)" >
        <param name="publish_frequency" type="double" value="50.0" />
        <remap from="joint_states" to="/$(arg head3_namespace)/joint_states" />
      </node>
    </group>

  </group>

</launch>
